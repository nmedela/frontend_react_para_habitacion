{"version":3,"sources":["config.js","components/menu/global.js","components/utils/my-slider.js","components/content/sound/sound.js","components/menu/subMenu.js","components/menu/appBar.js","services/lightService.js","components/content/light/main.js","components/utils/listProgram.js","components/utils/radioOptions.js","components/content/light/setTime.js","components/content/light/setTimeContent.js","components/utils/stepperProgram.js","components/content/light/configurationLight.js","components/content/light/scenes.js","components/menu/tabsLight.js","components/content/light/light.js","App.js","serviceWorker.js","index.js"],"names":["pathIndex","url","styleEncabezado","backgroundColor","height","cursor","Global","props","state","value","this","setState","findIndex","e","window","location","pathname","BottomNavigation","onChange","event","newValue","showLabels","style","BottomNavigationAction","icon","fontSize","component","Link","to","React","Component","theme","createMuiTheme","overrides","MuiSlider","thumb","width","borderBottom","marginLeft","rail","color","borderBottomRightRadius","borderBottomLeftRadius","track","MySlider","change","id","isBoolean","mute","axios","post","then","res","data","handleChange","step","parseInt","stepSlider","num","controls","long","maxNum","minNum","nameSlider","styleControls","display","marginRight","borderRadius","styleSlider","marginTop","Grid","container","align","spacing","item","xs","sm","Typography","border","fontStyle","fontWeight","onClick","handleClick","ThemeProvider","Slider","min","max","onChangeCommitted","aria-labelledby","style6","padding","styleContainer","margin","Sound","interval","sound","power","volumen","bass","treble","balanceL","balanceR","isLoading","init","setInterval","get","JSON","stringify","console","log","clearInterval","CircularProgress","disableShrink","aling","paddingRight","IconButton","makeStyles","root","paper","menuList","flexGrow","menuButton","LightService","getAll","setScene","light","getScenes","changePrincial","getSteps","setOption","option","getOptions","deleteOption","delete","useStyles","textAlign","alignContent","palette","text","secondary","service","MainLight","classes","className","Paper","Button","maxWidth","demo","background","title","button","ListProgram","useState","dense","handleDelete","target","handleRefreshList","md","variant","List","list","map","ListItem","ListItemAvatar","Avatar","ListItemText","frecuency","time","action","ListItemSecondaryAction","formControl","formControlLabel","RadioButtonsGroup","options","setValue","setIsLoading","useEffect","object","handleSelected","FormControl","RadioGroup","FormControlLabel","control","Radio","label","minutes","hours","SetTime","add","index","length","sendValue","val","handleValue","sub","Input","readOnly","SetTimeContent","handleHour","o","hour","handleMinute","minute","repeat","actionsContainer","marginBottom","resetContainer","StepperProgram","activeStep","setActiveStep","steps","setSteps","selectedObject","setSelectedObject","handleChangeOption","handleNext","prevActiveStep","handleBack","Stepper","orientation","Step","key","StepLabel","StepContent","objeto","titulos","push","getStepContent","disabled","square","elevation","started","moment","handleClose","buttonMain","buttonConfirm","paperSelect","paperMain","paperScenes","menuItem","ConfigurationLight","setOpen","listProgram","setListProgram","getListProgram","refreshList","newList","DialogLight","PaperComponent","open","Fab","aria-label","Dialog","onClose","DialogContent","DialogContentText","buttonScenes","minWidth","select","Scenes","lights","setLights","scenes","setScenes","selected","setSelected","valor","respo","changeIntensity","newLights","intensity","changeSelected","InputLabel","Select","labelId","onOpen","MenuItem","TabPanel","children","Box","styleTab","MenuLight","AppBar","position","Tabs","centered","fullWidth","Tab","Light","isReady","content","App","from","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abcafbdf.chunk.js","sourcesContent":["const pathIndex = [\r\n    '/light',\r\n    '/sound',\r\n    '/light/scenes',\r\n    '/light/program',\r\n\r\n]\r\n\r\nexport default pathIndex\r\n\r\nexport const url='192.168.0.99:4000'","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport PlayCircleFilledSharpIcon from '@material-ui/icons/PlayCircleFilledSharp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport pathIndex from './../../config'\r\nimport './../../App.css'\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst styleEncabezado = {\r\n  backgroundColor: \"orange\",\r\n  height: '100px',\r\n  cursor: 'none'\r\n}\r\n\r\nclass Global extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: 0,\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ value: pathIndex.findIndex(e => e === window.location.pathname) })\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <BottomNavigation\r\n        value={this.state.value}\r\n        onChange={(event, newValue) => {\r\n          this.setState({ value: newValue });\r\n        }}\r\n        showLabels\r\n        style={styleEncabezado}\r\n\r\n      >\r\n        <BottomNavigationAction\r\n          // label=\"Luces\"\r\n          style={{ cursor: 'none' }}\r\n          icon={<Brightness5Icon\r\n            style={{ fontSize: '50px', cursor: 'none' }} />}\r\n          component={Link} to={pathIndex[0]} />\r\n        <BottomNavigationAction\r\n          // label=\"Audio\"\r\n          style={{  cursor:'none'}}\r\n          icon={<PlayCircleFilledSharpIcon\r\n            style={{ fontSize: '50px', cursor: 'none' }} />}\r\n          component={Link} to={pathIndex[1]} />\r\n      </BottomNavigation>\r\n\r\n\r\n    )\r\n  }\r\n}\r\nexport default Global\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOff from '@material-ui/icons/VolumeOff'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport axios from 'axios'\r\nimport { isBoolean } from 'util';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { url } from '../../config'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        // Style sheet name ⚛️\r\n        MuiSlider: {\r\n            // Name of the rule\r\n            thumb: {\r\n                // Some CSS\r\n                width: '35px',\r\n                height: '35px',\r\n                // color:'black',\r\n                backgroundColor: '#fff',\r\n                borderBottom: '2px solid black',\r\n                marginLeft: '-10px'\r\n            },\r\n            rail: {\r\n                height: '25px',\r\n                color: 'gray',\r\n                borderBottom: '2px solid black',\r\n                borderBottomRightRadius: '10px',\r\n                borderBottomLeftRadius: '10px'\r\n            },\r\n            track: {\r\n                height: '25px',\r\n                color: 'blue',\r\n                borderBottomRightRadius: '10px',\r\n                borderBottomLeftRadius: '10px'\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nclass MySlider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: null,\r\n            step: parseInt(this.props.stepSlider) ? parseInt(this.props.stepSlider) : 1,\r\n            mute: null\r\n        }\r\n\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            value: props.value\r\n        })\r\n\r\n    }\r\n    componentWillMount() {\r\n        this.setState({\r\n            value: this.props.value\r\n        })\r\n    }\r\n    change = (id, newValue) => {\r\n        isBoolean(newValue) ? this.setState({ mute: newValue }) : this.setState({ value: newValue })\r\n        axios.post(`http://${url}/sound/change/68/${id}`, { value: newValue })\r\n            .then(res => {\r\n                var sound = res.data\r\n                // console.log(sound)\r\n            })\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.change(this.props.id, newValue)\r\n    };\r\n    handleClick(newValue) {\r\n        var num = parseInt(newValue)\r\n        var value = this.state.value + num\r\n        if (value < 0 || value > 47) {\r\n            value < 0 ? value = 0 : value = 47\r\n        }\r\n        this.change(this.props.id, value)\r\n\r\n    }\r\n    render() {\r\n        const {\r\n            controls,\r\n            long,\r\n            maxNum,\r\n            minNum,\r\n            mute,\r\n            nameSlider,\r\n        } = this.props\r\n\r\n\r\n        const styleControls = {\r\n            display: controls ? 'inline' : 'none',\r\n            marginRight: '20px',\r\n            marginLeft: '10px',\r\n            borderBottom: ' 1px solid black',\r\n            width: '70px',\r\n            height: '60px',\r\n            borderRadius: '5px',\r\n            cursor: 'none'\r\n\r\n        }\r\n        const styleSlider = {\r\n            width: long ? long : '300px',\r\n            height: '20px',\r\n            marginTop: '1px',\r\n            marginLeft: '15px',\r\n            cursor: 'none'\r\n        }\r\n        return (\r\n            <div>\r\n                <Grid container align='center' spacing={1}>\r\n                    <Grid item xs={12} sm={12}>\r\n\r\n                        <Typography style={{ fontSize: '20px', border: '1px solid rgb(160,160,160)', borderRadius: '20px', marginRight:'30px' }} align='center'  >\r\n                            <span>\r\n                                {nameSlider + \" \"}\r\n                            </span>\r\n                            <span style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\r\n                                {this.state.value}\r\n                            </span>\r\n                        </Typography>\r\n                        {/* <br /> */}\r\n                        {\r\n                            mute ? <button\r\n                                style={\r\n                                    { backgroundColor: this.state.mute ? 'gray' : '#DDD', width: '70px', height: '60px', borderBottom: ' 1px solid black', }}\r\n                                id='mute'\r\n                                onClick={() => this.change('mute', !this.state.mute)}\r\n                            ><VolumeOff /></button> : null\r\n                        }\r\n                        <button style={styleControls}\r\n                            onClick={() => this.handleClick('-2')}\r\n                        ><VolumeDown /></button>\r\n                        <ThemeProvider theme={theme}>\r\n\r\n                            <Slider\r\n                                style={\r\n                                    styleSlider\r\n                                }\r\n                                value={this.state.value}\r\n                                min={parseInt(minNum)}\r\n                                max={parseInt(maxNum)}\r\n                                step={this.state.step}\r\n                                onChangeCommitted={this.handleChange}\r\n                                aria-labelledby=\"continuous-slider\"\r\n                            />\r\n                        </ThemeProvider>\r\n\r\n                        <button style={styleControls} onClick={() => this.handleClick('2')} ><VolumeUp /></button>\r\n                        <br />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MySlider","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MySlider from '../../utils/my-slider';\r\nimport axios from 'axios'\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { url } from '../../../config'\r\n\r\nconst style12 = {\r\n    height: '140px',\r\n    padding:'0px',\r\n    // border: '1px solid'\r\n}\r\nconst style6 = {\r\n    height: '120px',\r\n    padding:'0px'\r\n    // border: '1px solid rgb(190,190,190)',\r\n\r\n}\r\nconst styleContainer = { width: '800px', margin: '0px', backgroundColor: 'rgb(200,200,200)' }\r\n\r\n\r\nclass Sound extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            sound: {\r\n                volumen: null,\r\n                bass: null,\r\n                treble: null,\r\n                balanceL: null,\r\n                balanceR: null,\r\n                power: null,\r\n            },\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    interval = 0\r\n\r\n    componentWillMount() {\r\n        this.init()\r\n        this.interval = setInterval(() => {\r\n            axios.get(`http://${url}/sound/sounds/68`)\r\n                .then((res) => {\r\n                    if (JSON.stringify(this.state.sound) != res.data) {\r\n                        this.init()\r\n                    }\r\n                })\r\n        }, 3000)\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('Se desmonta')\r\n        clearInterval(this.interval)\r\n    }\r\n    init() {\r\n        axios.get(`http://${url}/sound/sounds/68`)\r\n            .then((res) => {\r\n                this.setState({\r\n                    sound: res.data,\r\n                    isLoading: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    handleClick = (event, newValue) => {\r\n        axios.post(`http://${url}/sound/change/68/power`, { value: (this.state.sound.power ? 0 : 1) })\r\n            .then((res) => {\r\n                this.setState({\r\n                    sound: { power: !this.state.sound.power }\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return <div >\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} align='center'>\r\n                        <CircularProgress disableShrink style={{ width: '100px', height: '100px' }} />\r\n                        <p>Cargando...</p>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n        }\r\n        return (\r\n            < div >\r\n                <Grid style={styleContainer} container spacing={0}>\r\n                    <Grid container spacing={0} aling='center' style={{paddingRight:'-10px',marginRight:'20px' }}>\r\n                            <Grid container spacing={0} style={{marginTop:'13px', marginRight:'10px' }}>\r\n                                <Grid item xs={12} sm={2} align='center'>\r\n                                    <IconButton onClick={this.handleClick}\r\n                                        style={\r\n                                            {\r\n                                                backgroundColor: 'rgb(250,250,250)',\r\n                                                borderBottom: '4px solid rgb(100,100,100)',\r\n                                                cursor: 'none'\r\n                                            }\r\n                                        }\r\n                                    > <PowerSettingsNewIcon color={!this.state.sound.power ? 'disabled' : 'secondary'}\r\n                                        style={{ fontSize: 60 }} /></IconButton>\r\n                                    {/* <button disabled>Restablecer</button> */}\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={10} >\r\n                                    <MySlider\r\n                                        controls\r\n                                        long='350px'\r\n                                        id='volumen'\r\n                                        maxNum='47'\r\n                                        minNum='0'\r\n                                        mute\r\n                                        nameSlider='Volumen'\r\n                                        value={this.state.sound.volumen}\r\n                                    />\r\n                                </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} style={{marginTop:'16px',marginRight:'10px', padding:'0px'}} aling='center'>\r\n                        <Grid style={style6} item xs={12} sm={6}>\r\n                            <MySlider\r\n                                id='bass'\r\n                                maxNum='14'\r\n                                minNum='-14'\r\n                                stepSlider='2'\r\n                                nameSlider='Graves'\r\n                                value={this.state.sound.bass}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} style={style6}>\r\n                            <MySlider\r\n                                id='treble'\r\n                                maxNum='14'\r\n                                minNum='-14'\r\n                                stepSlider='2'\r\n                                nameSlider='Agudos'\r\n                                value={this.state.sound.treble}\r\n\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} style={{marginTop:'17px',marginRight:'10px', padding:'0px'}} aling='center'>\r\n\r\n                        <Grid style={style6} item xs={12} sm={6}>\r\n                            <MySlider\r\n                                id='balanceL'\r\n                                maxNum='79'\r\n                                minNum='0'\r\n                                nameSlider='Balance L'\r\n                                value={this.state.sound.balanceL}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} style={style6}>\r\n                            <MySlider\r\n                                id='balanceR'\r\n                                maxNum='79'\r\n                                minNum='0'\r\n                                nameSlider='Balance R'\r\n                                value={this.state.sound.balanceR}\r\n                            />\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\nexport default Sound","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n        width: '200px',\r\n        backgroundColor: 'primary',\r\n    },\r\n    menuList: {\r\n        height: '50px',\r\n        fontSize:'25px'\r\n    },\r\n}));\r\n\r\nexport default function ButtonDesplegable() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen(prevOpen => !prevOpen);\r\n    };\r\n\r\n    const handleClose = event => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button\r\n                    ref={anchorRef}\r\n                    aria-controls={open ? 'menu-list-grow' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleToggle}\r\n                    style={{ color: 'white',width:'70px', height:'56px' }}\r\n                >\r\n                    <MenuIcon style={{ color: 'white', height:'50px' }} />\r\n                </Button>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper className={classes.paper} >\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem className={classes.menuList} onClick={handleClose}><a href=\"/light\">Principal</a></MenuItem>\r\n                                        <MenuItem className={classes.menuList} onClick={handleClose}><a href=\"/light/scenes\">Escenas</a></MenuItem>\r\n                                        <MenuItem className={classes.menuList} onClick={handleClose}><a href=\"/light/program\">Programar</a></MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonDesplegable from './../menu/subMenu'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <ButtonDesplegable />\r\n          </IconButton>\r\n          <Typography variant=\"h4\" color=\"inherit\">\r\n            Luces\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import axios from 'axios'\r\nimport { url } from '../config'\r\nclass LightService {\r\n    constructor() {\r\n\r\n    }\r\n    getAll = () => {\r\n        return axios.get(`http://${url}/light/all`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    }\r\n    setScene = (light) => {\r\n        return axios.post(`http://${url}/light/change`, light)\r\n            .then((res) => {\r\n                console.log(res)\r\n                return res.data\r\n            })\r\n    }\r\n    getScenes =()=>{\r\n        return axios.get(`http://${url}/light/scenes`)\r\n        .then((res) =>{\r\n            return res.data\r\n        })\r\n    }\r\n    changePrincial =()=>{\r\n        return axios.post(`http://${url}/light/principal`, )\r\n        .then((res) => {\r\n            console.log(res)\r\n            return res.data\r\n        })\r\n    }\r\n    getSteps = () => {\r\n        return axios.get(`http://${url}/light/steps`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    }\r\n    setOption = (option) => {\r\n        return axios.post(`http://${url}/light/program`, option)\r\n            .then((res) => {\r\n                console.log(res)\r\n                return res.data\r\n            })\r\n    }\r\n    getOptions = () => {\r\n        return axios.get(`http://${url}/light/program/all`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    }\r\n    deleteOption = (id) => {\r\n        return axios.delete(`http://${url}/light/program/${id}`)\r\n        .then((res) => {\r\n            return res.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default LightService","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport LightService from './../../../services/lightService'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        alignContent: 'center',\r\n        backgroundColor: 'black',\r\n        color: theme.palette.text.secondary,\r\n        height: '258px'\r\n    },\r\n}));\r\nconst service = new LightService()\r\n\r\nexport default function MainLight() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Button\r\n                        onClick= {()=>{service.changePrincial()}}\r\n                            style={\r\n                                {\r\n                                    cursor: 'none',\r\n                                    height: 'inherit',\r\n                                    width: '600px',\r\n                                    fontSize: 40,\r\n                                    border: '3px solid rgb(0,90,255)',\r\n                                    color: 'white',\r\n                                    backgroundColor:'rgb(20,20,20)',\r\n                                    borderRadius:40\r\n                                }}>\r\n                            </Button>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport LightService from './../../services/lightService'\r\nimport moment from 'moment'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"500px\"\r\n    },\r\n    title: {\r\n        margin: theme.spacing(1, 0, 0),\r\n    },\r\n    icon: {\r\n        fontSize: 5\r\n    },\r\n    button: {\r\n        height: 30\r\n    },\r\n\r\n}));\r\nconst service = new LightService()\r\n\r\nexport default function ListProgram(props) {\r\n    const classes = useStyles();\r\n    const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(true);\r\n\r\n    const handleDelete = (e) => {\r\n        service.deleteOption(e.target.value).then(() => {\r\n            props.handleRefreshList()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Configuraciones\r\n          </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense}>\r\n\r\n                            {props.list.map((e) => {\r\n\r\n                                return (<ListItem  >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <FolderIcon />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        // primary={\"Se ejecutará \" + e.frecuency.title + ' a las ' + e.time  }\r\n                                        secondary={secondary ? e.frecuency.title + ' a las ' + e.time +' -' + e.action.title + '-' + e.light.title : null}\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Button\r\n                                        \r\n                                            value={e.id}\r\n                                            onClick={handleDelete}\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                        // startIcon={<DeleteIcon />}\r\n                                        > </Button>\r\n\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>)\r\n                            })}\r\n                        </List> \r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    formControlLabel: {\r\n        height: '50px'\r\n    }\r\n}));\r\n\r\nexport default function RadioButtonsGroup(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(props.options[0]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n    const handleChange = event => {\r\n        setValue(event.target.value);\r\n        props.object[props.step] = { value: props.options.findIndex(e => e == event.target.value) }\r\n        props.handleSelected(props.object)\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            setIsLoading(false)\r\n            var object = props.object\r\n            object[props.step] = { 'value': 0 }\r\n            props.handleSelected(object)\r\n\r\n        }\r\n\r\n    })\r\n    return (\r\n\r\n        <div>\r\n            <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                <RadioGroup value={value} onChange={handleChange}>\r\n                    {props.options.map((e) => {\r\n                        return (\r\n                            <FormControlLabel className={classes.formControlLabel} value={e} control={<Radio />} label={e} />\r\n                        )\r\n                    }\r\n\r\n                    )}\r\n                </RadioGroup>\r\n            </FormControl>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst minutes = [0, 10, 20, 30, 40, 50]\r\nconst hours = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\r\n\r\nclass SetTime extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            index: 0,\r\n            value: 0,\r\n            time: props.minutes ? minutes : hours\r\n        }\r\n\r\n    }\r\n\r\n    add = () => {\r\n        if (this.state.index != this.state.time.length - 1) {\r\n            this.setState((state) => {\r\n                return { index: state.index + 1 }\r\n            })\r\n        } else {\r\n            this.setState((state) => {\r\n                return { index: 0 }\r\n            })\r\n\r\n        }\r\n        this.setState((state) => {\r\n            this.sendValue(state.time[state.index])\r\n            return { value: state.time[state.index] }\r\n        })\r\n    }\r\n    sendValue = (val) => {\r\n        this.props.handleValue(val)\r\n\r\n    }\r\n    sub = () => {\r\n        if (this.state.index != 0) {\r\n            this.setState((state) => {\r\n                return { index: state.index - 1 }\r\n            })\r\n        } else {\r\n            this.setState((state) => {\r\n                return { index: state.time.length - 1 }\r\n            })\r\n\r\n        }\r\n        this.setState((state) => {\r\n            this.sendValue(state.time[state.index])\r\n            return { value: state.time[state.index] }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button style={{ margin: '20px', width: '30px' }} onClick={this.sub} variant=\"contained\" color=\"secondary\">\r\n                    -\r\n      </Button>\r\n                <Input\r\n                    style={{ width: '40px', fontSize: 20 }}\r\n                    readOnly\r\n                    id=\"outlined-number\"\r\n                    label=\"Number\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.value}\r\n\r\n                />\r\n                <Button style={{ margin: '20px', width: '30px' }} onClick={this.add} variant=\"contained\" color=\"secondary\">\r\n                    +\r\n      </Button>{this.props.minutes ? 'Min' : 'Hs'}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SetTime","import React from 'react'\r\nimport SetTime from './setTime'\r\n\r\nclass SetTimeContent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hour: 0,\r\n            minute: 0,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        var object = this.props.object\r\n        object[this.props.step] = { 'value': '00:00' }\r\n        this.props.handleSelected(object)\r\n    }\r\n    componentWillUnmount() {\r\n        var value = this.state.hour + ':' + this.state.minute\r\n        this.props.object[this.props.step] = { value }\r\n        this.props.handleSelected(this.props.object)\r\n    }\r\n    handleHour = (o) => {\r\n        this.setState({ hour: o } )\r\n    }\r\n    handleMinute = (o) => {\r\n        this.setState({ minute: o })\r\n    }\r\n    render() {\r\n        return (<div>\r\n            {this.props.repeat && <SetTime handleValue={this.handleHour} hours />}\r\n            <br></br>\r\n            <SetTime handleValue={this.handleMinute} minutes />\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SetTimeContent","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioButtonsGroup from './../utils/radioOptions'\r\nimport SetTimeContent from './../content/light/setTimeContent'\r\nimport LightService from './../../services/lightService'\r\nimport { url } from '../../config'\r\nimport moment from'moment'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n        textAlign: 'center'\r\n    },\r\n}));\r\nconst service = new LightService()\r\n\r\nconst getSteps = () => {\r\n    return service.getSteps().then((res) => {\r\n        return res\r\n    })\r\n}\r\n\r\n// function getSteps() {\r\n\r\n//     return ['Seleccionar frecuencia', 'Elegir tiempo', 'Modo de accionar', 'Luz'];\r\n// }\r\n\r\nfunction getStepContent(step, label, handleChangeOption, object) {\r\n\r\n    const handleSelected = (objeto) => {\r\n        handleChangeOption(objeto)\r\n    }\r\n\r\n    switch (step) {\r\n        case 0:\r\n            var titulos = []\r\n            label.map((e) => { (titulos.push(e.title)) })\r\n            return (\r\n                //Frecuencia\r\n                <RadioButtonsGroup handleSelected={handleSelected} object={object} step={step} options={titulos} />\r\n            );\r\n        case 1:\r\n            var titulos = []\r\n            label.map((e) => { (titulos.push(e.title)) })\r\n            return (\r\n                //Accion\r\n                < RadioButtonsGroup handleSelected={handleSelected} object={object} step={step} options={titulos} />\r\n            )\r\n        case 2:\r\n            var titulos = []\r\n            label.map((e) => { (titulos.push(e.title)) })\r\n            return (\r\n                //Luz\r\n                <RadioButtonsGroup handleSelected={handleSelected} object={object} step={step} options={titulos} />\r\n            )\r\n\r\n        case 3:\r\n            var titulos = []\r\n            label.map((e) => { (titulos.push(e.title)) })\r\n            return (\r\n                <SetTimeContent handleSelected={handleSelected} repeat={object[0].value == 1 ? true : false} object={object} step={step} />\r\n            )\r\n\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\n\r\n\r\nexport default function StepperProgram(props) {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [steps, setSteps] = React.useState(null);\r\n    const [selectedObject, setSelectedObject] = React.useState([\r\n        { value: null },\r\n        { value: null },\r\n        { value: null },\r\n        { value: null },\r\n    ]);\r\n    const handleChangeOption = (o, step, e) => {\r\n        setSelectedObject(o)\r\n    }\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            var valor = getSteps()\r\n            valor.then((res) => {\r\n                setSteps(res)\r\n                setIsLoading(false)\r\n            })\r\n        }\r\n    })\r\n    const handleNext = () => {\r\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n    };\r\n    const builder = () => {\r\n        var option =\r\n        {\r\n            started: moment(),\r\n            frecuency:  selectedObject[0].value,\r\n            action:selectedObject[1].value,\r\n            light:steps[2].list[selectedObject[2].value],\r\n            time:selectedObject[3].value\r\n        }\r\n        \r\n        return option\r\n    }\r\n    const sendRequest = () => {\r\n        var object = builder()\r\n        service.setOption(object).then((res)=>{\r\n            props.handleClose()\r\n        })\r\n    }\r\n\r\n    return (\r\n        !isLoading && <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} orientation=\"horizontal\">\r\n                {steps.map((label, index) => (\r\n                    <Step key={label.title}>\r\n                        <StepLabel>\r\n                            {/* { label.title } */}\r\n                        </StepLabel>\r\n                        <StepContent>\r\n                            <Typography>{getStepContent(index, label.list, handleChangeOption, selectedObject)}</Typography>\r\n                            <div className={classes.actionsContainer}>\r\n                                <div>\r\n                                    <Button\r\n                                        disabled={activeStep === 0}\r\n                                        onClick={handleBack}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        Back\r\n                  </Button>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </StepContent>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            {activeStep === steps.length && (\r\n                <Paper square elevation={3} className={classes.resetContainer}>\r\n                    <Typography>{'Se enviará la solicitud'} </Typography>\r\n                    {/* {JSON.stringify(selectedObject)} */}\r\n                    {/* <Button onClick={handleReset} className={classes.button}>\r\n                        Reset\r\n          </Button> */}\r\n                    <Button onClick={sendRequest}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}>\r\n                        ok\r\n          </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListProgram from './../../utils/listProgram'\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport StepperProgram from '../../utils/stepperProgram';\r\nimport LightService from './../../../services/lightService'\r\n\r\n// import Paper from '@material-ui/core/Paper';\r\n// import DialogLight from './../../utils/dialogLight'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    buttonMain: {\r\n        fontSize: 70,\r\n        height: '150px',\r\n        width: '150px',\r\n        border: '2px solid rgb(140,140,140)',\r\n        cursor: 'none'\r\n    },\r\n    buttonConfirm: {\r\n        width: '50px',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'rgb(200,200,200)',\r\n        height: '288px'\r\n\r\n    },\r\n    paperSelect: {\r\n        padding: theme.spacing(3),\r\n        backgroundColor: 'rgb(200,200,200)',\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        cursor: 'none'\r\n        // border: '1px solid black'\r\n    },\r\n    paperMain: {\r\n        padding: theme.spacing(4),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        // border: '1px solid black',\r\n        cursor: 'none'\r\n    },\r\n    paperScenes: {\r\n        backgroundColor: 'rgb(200,200,200)',\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        cursor: 'none'\r\n        // border: '1px solid black',\r\n    },\r\n    menuItem: {\r\n        height: '80px',\r\n        width: '200px',\r\n        cursor: 'none'\r\n    }\r\n}));\r\nconst service = new LightService()\r\nvar interval = 0\r\nexport default function ConfigurationLight() {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [listProgram, setListProgram] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true)\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            getListProgram()\r\n        }\r\n    })\r\n    useEffect(() => {\r\n       \r\n        interval = setInterval(refreshList,60000)\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n    const handleChange = event => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        refreshList()\r\n\r\n    };\r\n    const refreshList = () => {\r\n        setIsLoading(true)\r\n        getListProgram()\r\n\r\n    }\r\n    const getListProgram = () => {\r\n        if (isLoading) {\r\n            return service.getOptions()\r\n                .then((newList) => {\r\n                    setListProgram(newList)\r\n                    setIsLoading(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const dialog = () => {\r\n        return (<DialogLight />)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Grid item xs={12} sm={12} >\r\n                            <div className={classes.paperSelect}>\r\n                                <DialogLight handleClose={handleClose} />\r\n                            </div>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={8} >\r\n                        <div className={classes.paperScenes}>\r\n                            {!isLoading ? <ListProgram handleRefreshList={refreshList} list={listProgram} /> : 'No hay programas'}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Paper style={{ width: '750px', height: '480px' }} {...props} />\r\n    );\r\n}\r\nexport function DialogLight(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.handleClose()\r\n    }\r\n    return (\r\n        <div >\r\n            <Fab className={classes.buttonMain} onClick={handleClickOpen} color=\"primary\" aria-label=\"add\">\r\n                <AddIcon />\r\n            </Fab>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperComponent={PaperComponent}\r\n\r\n            // aria-labelledby=\"draggable-dialog-title\"\r\n            >\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <StepperProgram handleClose={handleClose} />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                {/* <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n            </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Aceptar\r\n            </Button>\r\n                </DialogActions> */}\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport LightService from './../../../services/lightService'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    buttonScenes: {\r\n        margin: theme.spacing(1),\r\n        height: '110px',\r\n        width: '200px',\r\n        fontSize: 20,\r\n        borderRadius: '50px',\r\n        backgroundColor: 'rgb(100,100,100)',\r\n        cursor: 'none'\r\n    },\r\n    buttonMain: {\r\n        fontSize: 20,\r\n        height: '100px',\r\n        width: '200px',\r\n        border: '2px solid rgb(140,140,140)',\r\n        cursor: 'none'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 120,\r\n        cursor: 'none'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'rgb(200,200,200)',\r\n\r\n    },\r\n    select: {\r\n        height: 60,\r\n        width: '200px',\r\n        cursor: 'none'\r\n    },\r\n    paperSelect: {\r\n        padding: theme.spacing(3),\r\n        backgroundColor: 'rgb(200,200,200)',\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        cursor: 'none'\r\n        // border: '1px solid black'\r\n    },\r\n    paperMain: {\r\n        padding: theme.spacing(4),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        // border: '1px solid black',\r\n        cursor: 'none'\r\n    },\r\n    paperScenes: {\r\n        backgroundColor: 'rgb(200,200,200)',\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        cursor: 'none'\r\n        // border: '1px solid black',\r\n    },\r\n    menuItem: {\r\n        height: '80px',\r\n        width: '200px',\r\n        cursor: 'none'\r\n    }\r\n}));\r\nconst service = new LightService()\r\n\r\nexport default function Scenes() {\r\n    const classes = useStyles();\r\n    const [lights, setLights] = React.useState(null);\r\n    const [scenes, setScenes] = React.useState(null);\r\n    const [selected, setSelected] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [open, setOpen] = React.useState(false);\r\n    const getAll = () => {\r\n        return service.getAll().then((res) => {\r\n            console.log(res)\r\n            return res\r\n        })\r\n    }\r\n\r\n    const getScenes = () => {\r\n        return service.getScenes().then((res) => {\r\n            return res\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n\r\n            var valor = getAll()\r\n            var scenes = getScenes()\r\n            valor.then((res) => {\r\n                setLights(res)\r\n                scenes.then((respo) => {\r\n                    console.log(\"esto trae scenes \", respo)\r\n                    setScenes(respo)\r\n                    setSelected(0)\r\n                    setIsLoading(false)\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n    })\r\n\r\n    const changeIntensity = (value) => {\r\n        var newLights = lights\r\n        var index = newLights.findIndex(e => e.id == selected)\r\n        newLights[index].intensity = value\r\n        setLights(newLights)\r\n        service.setScene(newLights[index])\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        changeSelected(event)\r\n    };\r\n    const changeSelected = (event) => {\r\n        setSelected(event.target.value)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const hola=()=>{\r\n        alert(\"lalalal\")\r\n    }\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!isLoading && <div className={classes.root}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={12} sm={4} >\r\n                        <Grid item xs={12} sm={12} >\r\n                            <div className={classes.paperSelect}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"label-light\">Luces</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"label-light\"\r\n                                        className={classes.select}\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                        onOpen={handleOpen}\r\n                                        value={selected}\r\n                                        onChange={e => handleChange(e)}\r\n                                    >\r\n                                        {\r\n                                            lights.map((e) => {\r\n                                                return (\r\n                                                    <MenuItem className={classes.menuItem} value={e.id}>{e.title}</MenuItem>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} >\r\n                            <div className={classes.paperMain}>\r\n                                <Button variant=\"contained\" onClick={()=>{service.changePrincial()}} className={classes.buttonMain}>Principal</Button>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={8} >\r\n                        <div className={classes.paperScenes}>\r\n                            <Button variant=\"contained\" color=\"Primary\" onClick={() => changeIntensity(scenes[0].intensity)} className={classes.buttonScenes}>{scenes[0].title}</Button>\r\n                            <Button variant=\"contained\" color=\"Primary\" onClick={() => changeIntensity(scenes[1].intensity)} className={classes.buttonScenes}>{scenes[1].title}</Button>\r\n                        </div>\r\n                        <div className={classes.paperScenes}>\r\n                            <Button variant=\"contained\" color=\"Primary\" onClick={() => changeIntensity(scenes[2].intensity)} className={classes.buttonScenes}>{scenes[2].title}</Button>\r\n                            <Button variant=\"contained\" color=\"Primary\" onClick={() => changeIntensity(scenes[3].intensity)} className={classes.buttonScenes}>{ scenes[3].title}</Button>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ConfigurationLight from '../content/light/configurationLight';\r\nimport MainLight from '../content/light/main';\r\nimport Scenes from '../content/light/scenes';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div>\r\n            {value === index && <Box>{children}</Box>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'theme.palette.background.paper',\r\n\r\n    },\r\n}));\r\nconst styleTab = {\r\n    fontSize: '20px',\r\n    width: '300px',\r\n    backgroundColor: 'brown',\r\n    height: '90px'\r\n}\r\nexport default function MenuLight() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} centered onChange={handleChange} fullWidth>\r\n                    <Tab label=\"Principal\"  style={styleTab} />\r\n                    <Tab label=\"Escenas\"  style={styleTab} />\r\n                    <Tab label=\"Programar\" style={styleTab} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <MainLight />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Scenes />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <ConfigurationLight />\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DenseAppBar from '../../menu/appBar'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport MainLight from './main'\r\nimport MenuLight from '../../menu/tabsLight';\r\n\r\nclass Light extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            isReady: true,\r\n            light: {\r\n\r\n            },\r\n            content: null\r\n        }\r\n    }\r\n    render() {\r\n        if (!this.state.isReady) {\r\n            return (\r\n                <div>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} align='center'>\r\n                            <CircularProgress disableShrink style={{ width: '100px', height: '100px' }} />\r\n                            <p>En construccion...</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>)\r\n        }\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <div>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} align='center'>\r\n                            <CircularProgress disableShrink style={{ width: '100px', height: '100px' }} />\r\n                            <p>Cargando...</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>)\r\n        }\r\n        return (\r\n            <div>\r\n                <MenuLight />\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Light","import React from 'react';\r\n// import './App.css';\r\nimport Global from './components/menu/global'\r\nimport Sound from './components/content/sound/sound'\r\nimport Light from './components/content/light/light';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport DenseAppBar from './components/menu/appBar'\r\n\r\n//se encuentran las rutas\r\nimport pathIndex from './config'\r\nimport MainLight from './components/content/light/main';\r\nimport Scenes from './components/content/light/scenes';\r\nimport ConfigurationLight from './components/content/light/configurationLight';\r\n\r\nconst styleEncabezado = {\r\n  backgroundColor: \"black\",\r\n  height: '100px'\r\n}\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div style={styleEncabezado}>\r\n          <Global />\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Redirect from='/' exact to='/light' />\r\n            <Route path={pathIndex[0]} component={Light} exact />\r\n            <Route path={pathIndex[1]} component={Sound} exact />\r\n          </Switch>\r\n\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}